# Задание №1
# Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод
# __init__()), который должен принимать данные (список списков) для формирования матрицы.
# Подсказка: матрица — система некоторых математических величин, расположенных в виде
# прямоугольной схемы.
# Примеры матриц: 3 на 2, 3 на 3, 2 на 4.
# Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в
# привычном виде.
# Далее реализовать перегрузку метода __add__() для реализации операции сложения двух
# объектов класса Matrix (двух матриц). Результатом сложения должна быть новая матрица.
# Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой
# строки первой матрицы складываем с первым элементом первой строки второй матрицы и т.д.

class Matrix:
    def __init__(self, ls_matrix):
        self.ls_matrix = ls_matrix

    def __str__(self):
        for line in self.ls_matrix:
            for el in line:
                print(f"{el:3}", end=" ")
            print()
        print()

    def __add__(self, other):
        for i in range(len(self.ls_matrix)):
            for i_1 in range(len(self.ls_matrix[i])):
                self.ls_matrix[i][i_1] = self.ls_matrix[i][i_1] + other.ls_matrix[i][i_1]
        return Matrix(self.ls_matrix)


ls_matrix_1 = [[-1, 0, 1], [0, 1, 2], [1, 2, 3]]
ls_matrix_2 = [[3, 2, 1], [2, 1, 0], [1, 0, -1]]

m1 = Matrix(ls_matrix_1)
m1.__str__()
m2 = Matrix(ls_matrix_2)
m2.__str__()
new_m = m1.__add__(m2)
print(type(new_m))
new_m.__str__()
