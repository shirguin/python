# Задание №3
# Создайте собственный класс-исключение, который должен проверять содержимое списка на
# наличие только чисел. Проверить работу исключения на реальном примере. Запрашивать у
# пользователя данные и заполнять список необходимо только числами. Класс-исключение
# должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока
# пользователь сам не остановит работу скрипта, введя, например, команду «stop». При этом
# скрипт завершается, сформированный список с числами выводится на экран.
# Подсказка: для этого задания примем, что пользователь может вводить только числа и строки.
# Во время ввода пользователем очередного элемента необходимо реализовать проверку типа
# элемента. Вносить его в список, только если введено число. Класс-исключение должен не
# позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
# При этом работа скрипта не должна завершаться.

class NotNumber(Exception):
    def __init__(self, text):
        self.text = text


my_ls = []
while True:
    try:
        el_my_ls = input('Введите число для следующего элемента списка или "stop" для выхода: ')
        if el_my_ls == "stop":
            break
        else:
            try:
                el_my_ls = int(el_my_ls)
            except ValueError:
                raise NotNumber('Вы ввели не число!')
        my_ls.append(el_my_ls)
    except NotNumber as err:
        print(err)
print()
print(f'Введенный список элементов: {my_ls}')
print('Программа завершена')
